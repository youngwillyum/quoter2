{"ast":null,"code":"var _jsxFileName = \"/home/willchildres/Documents/GitHub/quoter2/client/src/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require(\"crypto\");\n\nconst algorithm = \"aes-256-cbc\";\nconst initVector = crypto.randomBytes(16);\nconst Securitykey = crypto.randomBytes(32);\nconst cipher = crypto.createCipheriv(algorithm, Securitykey, initVector);\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    let encryptedData = cipher.update(password, \"utf-8\", \"hex\");\n    encryptedData += cipher.final(\"hex\");\n    console.log(\"Encrypted Message: \" + encryptedData);\n    const newLogin = {\n      login_email: username,\n      login_password: encryptedData\n    };\n    axios.post('http://localhost:8080/userLogin/add', newLogin).then(res => console.log(res.data));\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: e => setUserName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/willchildres/Documents/GitHub/quoter2/client/src/Login/Login.js"],"names":["React","useState","PropTypes","axios","crypto","require","algorithm","initVector","randomBytes","Securitykey","cipher","createCipheriv","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","encryptedData","update","final","console","log","newLogin","login_email","login_password","post","res","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport axios from 'axios';\n\nconst crypto = require(\"crypto\");\nconst algorithm = \"aes-256-cbc\";\nconst initVector = crypto.randomBytes(16);\nconst Securitykey = crypto.randomBytes(32);\nconst cipher = crypto.createCipheriv(algorithm, Securitykey, initVector);\n\n\n\nasync function loginUser(credentials) {\n return fetch('http://localhost:8080/login', {\n   method: 'POST',\n   headers: {\n     'Content-Type': 'application/json'\n   },\n   body: JSON.stringify(credentials)\n })\n   .then(data => data.json())\n}\n\n\nexport default function Login({ setToken }) {\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n\n    let encryptedData = cipher.update(password, \"utf-8\", \"hex\");\n    encryptedData += cipher.final(\"hex\");\n    console.log(\"Encrypted Message: \" + encryptedData);\n\n    const newLogin = {\n      login_email: username,\n      login_password: encryptedData\n  };\n\n    axios.post('http://localhost:8080/userLogin/add', newLogin ) \n    .then(res => console.log(res.data));\n\n    setToken(token);\n\n  }\n  \n  return(\n    <div className=\"login-wrapper\">\n      <h1>Please Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Email</p>\n          <input type=\"email\" onChange={e => setUserName(e.target.value)} required/>\n        </label>\n        <label>\n          <p>Password</p>\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} required />\n        </label>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}